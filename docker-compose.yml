services:

  rabbitmq:

    image: rabbitmq:3-management
    container_name: rabbitmq_broker
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest


  consumer:

    build: .
    container_name: etl_consumer

    command: ["python", "consumer.py", "all"]
    restart: always # Se reinicia automáticamente si falla
    environment:
      # Carga toda la configuración desde el fichero .env
      - AMQP_URL=${AMQP_URL}
      - EXCHANGE_NAME=${EXCHANGE_NAME}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
    volumes:
      - ./:/usr/src/app
    depends_on:
      - rabbitmq

  # Tarea de corta duración (one-shot): El orquestador de ingesta
  ingestion_task:
    build: .
    container_name: etl_ingestion_task
    environment:
      - AMQP_URL=${AMQP_URL}
      - EXCHANGE_NAME=${EXCHANGE_NAME}
      - BC_TENANT_ID=${BC_TENANT_ID}
      - BC_CLIENT_ID=${BC_CLIENT_ID}
      - BC_CLIENT_SECRET=${BC_CLIENT_SECRET}
    volumes:
      - ./:/usr/src/app
    depends_on:
      - rabbitmq

volumes:
  rabbitmq_data:
    driver: local